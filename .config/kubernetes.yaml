kind: Namespace
apiVersion: v1
metadata:
  name: startsch

---

kind: ConfigMap
apiVersion: v1
metadata:
  namespace: startsch
  name: startsch-config
data:
  Logging__LogLevel__Microsoft.AspNetCore: "Warning"
  Logging__LogLevel__Microsoft.AspNetCore.Authentication: "Warning"
  Logging__LogLevel__Microsoft.AspNetCore.Authorization: "Warning"
  Logging__LogLevel__Microsoft.AspNetCore.Components: "Warning"
  Logging__LogLevel__Microsoft.AspNetCore.Hosting: "Warning"
  Logging__LogLevel__Microsoft.AspNetCore.HttpOverrides: "Warning"
  Logging__LogLevel__Microsoft.AspNetCore.Server: "Warning"
  Logging__LogLevel__Microsoft.EntityFrameworkCore: "Information"
  Logging__LogLevel__Microsoft.EntityFrameworkCore.Migrations: "Information"
  Logging__LogLevel__Microsoft.Hosting: "Information"

---

kind: Secret
apiVersion: v1
metadata:
  namespace: startsch
  name: startsch-secrets

---

kind: Service
apiVersion: v1
metadata:
  namespace: startsch
  name: startsch
spec:
  selector:
    app.kubernetes.io/name: startsch
    app.kubernetes.io/component: server
  ports:
    - name: http
      port: 80
      targetPort: http

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  namespace: startsch
  name: startsch
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-ingress-class: traefik
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - start.sch.bme.hu
      secretName: startsch-tls-cert
  rules:
    - host: start.sch.bme.hu
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: startsch
                port:
                  name: http

---

kind: Cluster
apiVersion: postgresql.cnpg.io/v1
metadata:
  namespace: startsch
  name: startsch-db
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-startsch
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: startsch
  annotations:
spec:
  primaryUpdateStrategy: unsupervised
  instances: 2
  storage:
    size: 1.5Gi # increase, apply, then delete the pods so that they are recreated. use `df` inside the Pods to check size, as Lens is lying
    storageClass: memory-ssd
  monitoring:
    enablePodMonitor: true
  bootstrap:
    initdb:
      database: startsch
      owner: startsch
  postgresql:
    parameters:
      wal_level: replica

---

kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: startsch
  name: startsch
  labels:
    app.kubernetes.io/name: startsch
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: startsch
      app.kubernetes.io/component: server
  template:
    metadata:
      namespace: startsch
      name: startsch
      labels:
        app.kubernetes.io/name: startsch
        app.kubernetes.io/component: server
    spec:
      containers:
        - name: startsch
          image: ghcr.io/kir-dev/startsch
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          env:
            - name: DBHOST
              valueFrom:
                secretKeyRef:
                  name: startsch-db-app
                  key: host
            - name: DBNAME
              valueFrom:
                secretKeyRef:
                  name: startsch-db-app
                  key: dbname
            - name: DBUSER
              valueFrom:
                secretKeyRef:
                  name: startsch-db-app
                  key: user
            - name: DBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: startsch-db-app
                  key: password
            - name: ConnectionStrings__Postgres
              value: "Host=$(DBHOST); Database=$(DBNAME); Username=$(DBUSER); Password=$(DBPASSWORD);"
          envFrom:
            - configMapRef:
                name: startsch-config
            - secretRef:
                name: startsch-secrets
          resources:
            requests:
              memory: 0.25Gi
              cpu: 0.1
            limits:
              memory: 1Gi
              cpu: 1
      restartPolicy: Always

---

apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: startsch
  namespace: kube-prometheus-stack
spec:
  podMetricsEndpoints:
    - port: http
      path: /metrics
  namespaceSelector:
    matchNames:
      - startsch
  selector:
    matchLabels:
      app.kubernetes.io/name: startsch
      app.kubernetes.io/component: server
