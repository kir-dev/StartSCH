<article class="post">
    <header>
        <div class="title">
            <h1>@Event.Title</h1>

            @if (!HideAdminControls)
            {
                <AuthorizeView Policy="Write" Resource="@Event">
                    <div class="icon-buttons">
                        <a title="Esemény szerkesztése" href="/events/@Event.Id/edit">
                            <md-icon>edit</md-icon>
                        </a>
                        <a title="Új alesemény" href="/events/0/edit?categories=@(string.Join(',', Event.Categories.Select(c => c.Id)))&parent=@Event.Id">
                            <md-icon>calendar_add_on</md-icon>
                        </a>
                        <a title="Új poszt" href="/posts/0/edit?categories=@(string.Join(',', Event.Categories.Select(c => c.Id)))&event=@Event.Id">
                            <md-icon>chat_add_on</md-icon>
                        </a>
                    </div>
                </AuthorizeView>
            }
        </div>

        <ul class="label-list">
            <li>
                <CategoryList Categories="@Event.Categories" Expanded />

                <div class="label">
                    <md-icon>event</md-icon>
                    <DateDisplay DateUtc="@Event.Start"/>
                </div>
            </li>

            @if (Event.ExternalUrl is {} url)
            {
                <li class="label">
                    <md-icon>open_in_new</md-icon>
                    <a href="@url" class="overflow-ellipsis">
                        @url.TryRemoveFromStart("https://").ToString()
                    </a>
                </li>
            }

            @if (Event.Parent != null)
            {
                <li>
                    <div class="label">
                        <md-icon>event</md-icon>
                        <a href="/events/@Event.Parent.Id" class="clip-text" style="max-width: 320px">
                            @if (Event.Parent.Start.HasValue
                                 && (Event.Parent.End ?? Event.Parent.Start.Value.AddHours(4)) > _utcNow)
                            {
                                <text>
                                    <DateDisplay DateUtc="@Event.Parent.Start"/>:
                                </text>
                            }
                            @Event.Parent.Title
                        </a>
                    </div>
                </li>
            }

            @if (Event is PincerOpening {  } opening)
            {
                var pincerId = opening.Categories[0].Page.PincerId;
                <li>
                    <div class="label">
                        <md-icon>shopping_cart</md-icon>
                        Rendelési időszak: 
                    </div>
                </li>
                <li>
                    <div class="label">
                        <md-icon>restaurant</md-icon>
                        Nyitás: 
                    </div>
                </li>
                <li>
                    <md-filled-button href="https://schpincer.sch.bme.hu/order/@pincerId">
                        <md-icon slot="icon">open_in_new</md-icon>
                        Rendelés
                    </md-filled-button>
                </li>
            }
        </ul>
    </header>

    <div class="body">
        @((MarkupString)_content.HtmlContent)
    </div>
</article>

@code {
    [Parameter, EditorRequired] public required Event Event { get; set; }
    private TextContent _content = null!;
    private readonly DateTime _utcNow = DateTime.UtcNow;

    [Parameter] public bool HideAdminControls { get; set; }

    protected override void OnParametersSet()
    {
        _content = new(Event.DescriptionMarkdown ?? "", null);
    }

}
