@rendermode InteractiveWebAssembly
@inject IJSRuntime Js

<PushSubscriptionManager @ref="@_pushManager"
                         IsEnabled="@_enablePushManager"
                         RegisteredEndpointHashes="@RegisteredPushEndpointHashes" />

<AuthorizeView>
    <md-filled-button type="submit" OnClick="@(() => _enablePushManager = _isPushSelected)">
        Ment√©s
    </md-filled-button>
</AuthorizeView>

<TagsSelector Tags="@Tags" UpdateParent="@(static () => { })"/>

@{
    var list = Tags.SelectMany(t => t.SerializeSelection()).ToList();
    _isPushSelected = list.Any(t => t.StartsWith("push"));
    var message = string.Join(',', list);
}
<input type="hidden" name="@FormParameterName" value="@message"/>

@code {

    private bool _isPushSelected;
    private bool _enablePushManager;
    private PushSubscriptionManager? _pushManager;

    [Parameter, EditorRequired] public required List<TagGroup> Tags { get; set; }
    [Parameter, EditorRequired] public required string FormParameterName { get; set; }
    [Parameter, EditorRequired] public required IEnumerable<string> SavedTags { get; set; }
    [Parameter, EditorRequired] public required List<string> RegisteredPushEndpointHashes { get; set; }

    protected override void OnInitialized()
    {
        TagGroup.DeserializeSelection(Tags, SavedTags);
        _enablePushManager = SavedTags.Any(t => t.StartsWith("push"));
    }

}
